@using ChatApp.Shared.Model;
@using static System.Net.WebRequestMethods;
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@attribute [Authorize]
@inject HttpClient Http

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">ChatApp</a>
        <button title="Navigation menu" class="navbar-toggler">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="nav-scrollable">
    <nav class="flex-column">
        @RenderChatrooms()
        <div class="nav-item px-3">
            <button class="btn btn-primary" @onclick="CreateChatroom"><span class="oi oi-plus" aria-hidden="true"></span>NEW ROOM</button>
        </div>
    </nav>
</div>

@code {
    private Chatroom[]? chatrooms;

    protected override async Task OnInitializedAsync()
    {
        await ListChatrooms();
    }

    private async Task CreateChatroom()
    {
        var response = await Http.PostAsync("Chatroom", null);

        if (response.IsSuccessStatusCode)
        {
            await ListChatrooms();
        }
    }

    private async Task ListChatrooms()
    {
        try
        {
            chatrooms = null;
            StateHasChanged();
            chatrooms = await Http.GetFromJsonAsync<Chatroom[]>("Chatroom");
            StateHasChanged();
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

    private RenderFragment RenderChatrooms()
    {
        return builder =>
        {
            if (chatrooms == null)
            {
                builder.AddContent(0, "Loading...");
            }
            else if (chatrooms.Length == 0)
            {
                builder.AddContent(1, "No chatroom available");
            }
            else
            {
                foreach (var chatroom in chatrooms)
                {
                    builder.OpenElement(2, "div");
                    builder.AddAttribute(3, "class", "nav-item px-3");
                    builder.OpenComponent<NavLink>(4);
                    builder.AddAttribute(5, "class", "nav-link");
                    builder.AddAttribute(6, "href", $"/chat/{chatroom.Id}");
                    builder.AddAttribute(7, "Match", NavLinkMatch.All);
                    builder.AddContent(8, chatroom.Name);
                    builder.CloseComponent();
                    builder.CloseElement();
                }
            }
        };
    }
}