@using ChatApp.Shared.Model;
@using static System.Net.WebRequestMethods;
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@attribute [Authorize]
@inject HttpClient Http

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">ChatApp</a>
        <button title="Navigation menu" class="navbar-toggler">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="nav-scrollable">
    <nav class="flex-column">
        @if (chatrooms == null)
        {
            <div class="nav-item px-3">
                <p style="color:white"><em>Loading...</em></p>
            </div>
            
        }
        else{
            @if(chatrooms.Count() == 0)
            {
                <div class="nav-item px-3">
                    <p style="color:white"><em>No chatroom available</em></p>
                </div>
            }
            @foreach (var chatroom in chatrooms)
            {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="@($"/chat/{chatroom.Id}")" Match="NavLinkMatch.All">
                    @chatroom.Name
                </NavLink>
            </div>
            }       
        }
        <div class="nav-item px-3">
            <button class="btn btn-primary" @onclick="CreateChatroom"><span class="oi oi-plus" aria-hidden="true"></span>NEW ROOM</button>
        </div>
    </nav>    
</div>

@code {
    private Chatroom[]? chatrooms;

    protected override async Task OnInitializedAsync()
    {
        await ListChatroom();
    }

    private async void CreateChatroom()
    {
        var response = await Http.PostAsync("Chatroom", null);

        if (response.IsSuccessStatusCode)
        {
            await ListChatroom();
        }
    }

    private async Task ListChatroom()
    {
        try
        {
            chatrooms = null;
            StateHasChanged();
            chatrooms = await Http.GetFromJsonAsync<Chatroom[]>("Chatroom");
            StateHasChanged();
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

}